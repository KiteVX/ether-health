{
	"id": "fba172713f2982921cead3bfa73e2122",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.1",
	"solcLongVersion": "0.5.1+commit.c8a2cb62",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Content.sol": {
				"content": "pragma solidity 0.5.1;\r\n\r\ncontract Content {\r\n\r\n    struct Cert {\r\n        address recipient;\r\n        bool confirmed;\r\n    }\r\n\r\n    mapping(bytes32 => Cert) public certs;\r\n    bytes32[] public certList;\r\n\r\n    event LogNewCert(address sender, bytes32 cert, address recipient);\r\n    event LogConfirmed(address sender, bytes32 cert);\r\n\r\n    function isCert(bytes32 cert) public view returns(bool isIndeed) {\r\n        if(cert == 0) return false;\r\n        return certs[cert].recipient != address(0);\r\n    }\r\n\r\n    function createCert(bytes32 cert, address recipient) public {\r\n        require(recipient != address(0));\r\n        require(!isCert(cert));\r\n        Cert storage c = certs[cert];\r\n        c.recipient = recipient;\r\n        certList.push(cert);\r\n        emit LogNewCert(msg.sender, cert, recipient);\r\n    }\r\n\r\n    function confirmCert(bytes32 cert) public {\r\n        require(certs[cert].recipient == msg.sender);\r\n        require(certs[cert].confirmed == false);\r\n        certs[cert].confirmed = true;\r\n        emit LogConfirmed(msg.sender, cert);\r\n    }\r\n\r\n    function isUserCert(bytes32 cert, address user) public view returns(bool) {\r\n        if(!isCert(cert)) return false;\r\n        if(certs[cert].recipient != user) return false;\r\n        return certs[cert].confirmed;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Content.sol": {
				"Content": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "certList",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "certs",
							"outputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "confirmed",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "cert",
									"type": "bytes32"
								}
							],
							"name": "isCert",
							"outputs": [
								{
									"name": "isIndeed",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "cert",
									"type": "bytes32"
								},
								{
									"name": "user",
									"type": "address"
								}
							],
							"name": "isUserCert",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "cert",
									"type": "bytes32"
								},
								{
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "createCert",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "cert",
									"type": "bytes32"
								}
							],
							"name": "confirmCert",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "cert",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "LogNewCert",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "cert",
									"type": "bytes32"
								}
							],
							"name": "LogConfirmed",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Content.sol\":26:1291  contract Content {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Content.sol\":26:1291  contract Content {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Content.sol\":26:1291  contract Content {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x10c1266c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4063d812\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x532442d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa7eaa1ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb8230960\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf260f5cf\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Content.sol\":177:202  bytes32[] public certList */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"contracts/Content.sol\":177:202  bytes32[] public certList */\n      pop\n      tag_9\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"contracts/Content.sol\":177:202  bytes32[] public certList */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Content.sol\":133:170  mapping(bytes32 => Cert) public certs */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/Content.sol\":133:170  mapping(bytes32 => Cert) public certs */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/Content.sol\":133:170  mapping(bytes32 => Cert) public certs */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Content.sol\":340:503  function isCert(bytes32 cert) public view returns(bool isIndeed) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/Content.sol\":340:503  function isCert(bytes32 cert) public view returns(bool isIndeed) {\r... */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"contracts/Content.sol\":340:503  function isCert(bytes32 cert) public view returns(bool isIndeed) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Content.sol\":1069:1288  function isUserCert(bytes32 cert, address user) public view returns(bool) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/Content.sol\":1069:1288  function isUserCert(bytes32 cert, address user) public view returns(bool) {\r... */\n      pop\n      tag_21\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"contracts/Content.sol\":1069:1288  function isUserCert(bytes32 cert, address user) public view returns(bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Content.sol\":511:813  function createCert(bytes32 cert, address recipient) public {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"contracts/Content.sol\":511:813  function createCert(bytes32 cert, address recipient) public {\r... */\n      pop\n      tag_25\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"contracts/Content.sol\":511:813  function createCert(bytes32 cert, address recipient) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/Content.sol\":821:1061  function confirmCert(bytes32 cert) public {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"contracts/Content.sol\":821:1061  function confirmCert(bytes32 cert) public {\r... */\n      pop\n      tag_29\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/Content.sol\":821:1061  function confirmCert(bytes32 cert) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Content.sol\":177:202  bytes32[] public certList */\n    tag_11:\n      0x1\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Content.sol\":133:170  mapping(bytes32 => Cert) public certs */\n    tag_15:\n      mstore(0x20, 0x0)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x0\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/Content.sol\":340:503  function isCert(bytes32 cert) public view returns(bool isIndeed) {\r... */\n    tag_19:\n        /* \"contracts/Content.sol\":390:403  bool isIndeed */\n      0x0\n        /* \"contracts/Content.sol\":427:428  0 */\n      dup1\n        /* \"contracts/Content.sol\":419:428  cert == 0 */\n      0x1\n      mul\n        /* \"contracts/Content.sol\":419:423  cert */\n      dup3\n        /* \"contracts/Content.sol\":419:428  cert == 0 */\n      eq\n        /* \"contracts/Content.sol\":416:442  if(cert == 0) return false */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/Content.sol\":437:442  false */\n      0x0\n        /* \"contracts/Content.sol\":430:442  return false */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/Content.sol\":416:442  if(cert == 0) return false */\n    tag_35:\n        /* \"contracts/Content.sol\":493:494  0 */\n      0x0\n        /* \"contracts/Content.sol\":460:495  certs[cert].recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Content.sol\":460:465  certs */\n      0x0\n        /* \"contracts/Content.sol\":460:471  certs[cert] */\n      dup1\n        /* \"contracts/Content.sol\":466:470  cert */\n      dup5\n        /* \"contracts/Content.sol\":460:471  certs[cert] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Content.sol\":460:481  certs[cert].recipient */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Content.sol\":460:495  certs[cert].recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Content.sol\":453:495  return certs[cert].recipient != address(0) */\n      swap1\n      pop\n        /* \"contracts/Content.sol\":340:503  function isCert(bytes32 cert) public view returns(bool isIndeed) {\r... */\n    tag_34:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Content.sol\":1069:1288  function isUserCert(bytes32 cert, address user) public view returns(bool) {\r... */\n    tag_23:\n        /* \"contracts/Content.sol\":1137:1141  bool */\n      0x0\n        /* \"contracts/Content.sol\":1158:1170  isCert(cert) */\n      tag_37\n        /* \"contracts/Content.sol\":1165:1169  cert */\n      dup4\n        /* \"contracts/Content.sol\":1158:1164  isCert */\n      tag_19\n        /* \"contracts/Content.sol\":1158:1170  isCert(cert) */\n      jump\t// in\n    tag_37:\n        /* \"contracts/Content.sol\":1157:1170  !isCert(cert) */\n      iszero\n        /* \"contracts/Content.sol\":1154:1184  if(!isCert(cert)) return false */\n      iszero\n      tag_38\n      jumpi\n        /* \"contracts/Content.sol\":1179:1184  false */\n      0x0\n        /* \"contracts/Content.sol\":1172:1184  return false */\n      swap1\n      pop\n      jump(tag_36)\n        /* \"contracts/Content.sol\":1154:1184  if(!isCert(cert)) return false */\n    tag_38:\n        /* \"contracts/Content.sol\":1223:1227  user */\n      dup2\n        /* \"contracts/Content.sol\":1198:1227  certs[cert].recipient != user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Content.sol\":1198:1203  certs */\n      0x0\n        /* \"contracts/Content.sol\":1198:1209  certs[cert] */\n      dup1\n        /* \"contracts/Content.sol\":1204:1208  cert */\n      dup6\n        /* \"contracts/Content.sol\":1198:1209  certs[cert] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Content.sol\":1198:1219  certs[cert].recipient */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Content.sol\":1198:1227  certs[cert].recipient != user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Content.sol\":1195:1241  if(certs[cert].recipient != user) return false */\n      iszero\n      tag_39\n      jumpi\n        /* \"contracts/Content.sol\":1236:1241  false */\n      0x0\n        /* \"contracts/Content.sol\":1229:1241  return false */\n      swap1\n      pop\n      jump(tag_36)\n        /* \"contracts/Content.sol\":1195:1241  if(certs[cert].recipient != user) return false */\n    tag_39:\n        /* \"contracts/Content.sol\":1259:1264  certs */\n      0x0\n        /* \"contracts/Content.sol\":1259:1270  certs[cert] */\n      dup1\n        /* \"contracts/Content.sol\":1265:1269  cert */\n      dup5\n        /* \"contracts/Content.sol\":1259:1270  certs[cert] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Content.sol\":1259:1280  certs[cert].confirmed */\n      0x0\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Content.sol\":1252:1280  return certs[cert].confirmed */\n      swap1\n      pop\n        /* \"contracts/Content.sol\":1069:1288  function isUserCert(bytes32 cert, address user) public view returns(bool) {\r... */\n    tag_36:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Content.sol\":511:813  function createCert(bytes32 cert, address recipient) public {\r... */\n    tag_27:\n        /* \"contracts/Content.sol\":611:612  0 */\n      0x0\n        /* \"contracts/Content.sol\":590:613  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Content.sol\":590:599  recipient */\n      dup2\n        /* \"contracts/Content.sol\":590:613  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Content.sol\":582:614  require(recipient != address(0)) */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_41:\n        /* \"contracts/Content.sol\":634:646  isCert(cert) */\n      tag_42\n        /* \"contracts/Content.sol\":641:645  cert */\n      dup3\n        /* \"contracts/Content.sol\":634:640  isCert */\n      tag_19\n        /* \"contracts/Content.sol\":634:646  isCert(cert) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/Content.sol\":633:646  !isCert(cert) */\n      iszero\n        /* \"contracts/Content.sol\":625:647  require(!isCert(cert)) */\n      iszero\n      iszero\n      tag_43\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_43:\n        /* \"contracts/Content.sol\":658:672  Cert storage c */\n      0x0\n        /* \"contracts/Content.sol\":675:680  certs */\n      dup1\n        /* \"contracts/Content.sol\":675:686  certs[cert] */\n      0x0\n        /* \"contracts/Content.sol\":681:685  cert */\n      dup5\n        /* \"contracts/Content.sol\":675:686  certs[cert] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Content.sol\":658:686  Cert storage c = certs[cert] */\n      swap1\n      pop\n        /* \"contracts/Content.sol\":711:720  recipient */\n      dup2\n        /* \"contracts/Content.sol\":697:698  c */\n      dup2\n        /* \"contracts/Content.sol\":697:708  c.recipient */\n      0x0\n      add\n      0x0\n        /* \"contracts/Content.sol\":697:720  c.recipient = recipient */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Content.sol\":731:739  certList */\n      0x1\n        /* \"contracts/Content.sol\":745:749  cert */\n      dup4\n        /* \"contracts/Content.sol\":731:750  certList.push(cert) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/Content.sol\":731:750  certList.push(cert) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n      pop\n        /* \"contracts/Content.sol\":766:805  LogNewCert(msg.sender, cert, recipient) */\n      0x6c31dccb879bb85919f9263c08ec4d92c6900d2f2c0193ac9efe02a777ba76d7\n        /* \"contracts/Content.sol\":777:787  msg.sender */\n      caller\n        /* \"contracts/Content.sol\":789:793  cert */\n      dup5\n        /* \"contracts/Content.sol\":795:804  recipient */\n      dup5\n        /* \"contracts/Content.sol\":766:805  LogNewCert(msg.sender, cert, recipient) */\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Content.sol\":511:813  function createCert(bytes32 cert, address recipient) public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Content.sol\":821:1061  function confirmCert(bytes32 cert) public {\r... */\n    tag_31:\n        /* \"contracts/Content.sol\":907:917  msg.sender */\n      caller\n        /* \"contracts/Content.sol\":882:917  certs[cert].recipient == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Content.sol\":882:887  certs */\n      0x0\n        /* \"contracts/Content.sol\":882:893  certs[cert] */\n      dup1\n        /* \"contracts/Content.sol\":888:892  cert */\n      dup4\n        /* \"contracts/Content.sol\":882:893  certs[cert] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Content.sol\":882:903  certs[cert].recipient */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Content.sol\":882:917  certs[cert].recipient == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Content.sol\":874:918  require(certs[cert].recipient == msg.sender) */\n      iszero\n      iszero\n      tag_46\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_46:\n        /* \"contracts/Content.sol\":962:967  false */\n      0x0\n        /* \"contracts/Content.sol\":937:967  certs[cert].confirmed == false */\n      iszero\n      iszero\n        /* \"contracts/Content.sol\":937:942  certs */\n      0x0\n        /* \"contracts/Content.sol\":937:948  certs[cert] */\n      dup1\n        /* \"contracts/Content.sol\":943:947  cert */\n      dup4\n        /* \"contracts/Content.sol\":937:948  certs[cert] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Content.sol\":937:958  certs[cert].confirmed */\n      0x0\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Content.sol\":937:967  certs[cert].confirmed == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Content.sol\":929:968  require(certs[cert].confirmed == false) */\n      iszero\n      iszero\n      tag_47\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_47:\n        /* \"contracts/Content.sol\":1003:1007  true */\n      0x1\n        /* \"contracts/Content.sol\":979:984  certs */\n      0x0\n        /* \"contracts/Content.sol\":979:990  certs[cert] */\n      dup1\n        /* \"contracts/Content.sol\":985:989  cert */\n      dup4\n        /* \"contracts/Content.sol\":979:990  certs[cert] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Content.sol\":979:1000  certs[cert].confirmed */\n      0x0\n      add\n      0x14\n        /* \"contracts/Content.sol\":979:1007  certs[cert].confirmed = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Content.sol\":1023:1053  LogConfirmed(msg.sender, cert) */\n      0xf356e1d4d68993b720834d1fbf88de67fedbfb9ced9d4a42987356b426ec3250\n        /* \"contracts/Content.sol\":1036:1046  msg.sender */\n      caller\n        /* \"contracts/Content.sol\":1048:1052  cert */\n      dup3\n        /* \"contracts/Content.sol\":1023:1053  LogConfirmed(msg.sender, cert) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Content.sol\":821:1061  function confirmCert(bytes32 cert) public {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582021117904bcde8f1520a67ae9dcf9fb3f891d62a888941d8f84d11797f965d11d0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061073f806100206000396000f3fe608060405260043610610072576000357c01000000000000000000000000000000000000000000000000000000009004806310c1266c146100775780634063d812146100c6578063532442d91461014c578063a7eaa1ac1461019f578063b823096014610212578063f260f5cf1461026d575b600080fd5b34801561008357600080fd5b506100b06004803603602081101561009a57600080fd5b81019080803590602001909291905050506102a8565b6040518082815260200191505060405180910390f35b3480156100d257600080fd5b506100ff600480360360208110156100e957600080fd5b81019080803590602001909291905050506102cb565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390f35b34801561015857600080fd5b506101856004803603602081101561016f57600080fd5b810190808035906020019092919050505061031c565b604051808215151515815260200191505060405180910390f35b3480156101ab57600080fd5b506101f8600480360360408110156101c257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a0565b604051808215151515815260200191505060405180910390f35b34801561021e57600080fd5b5061026b6004803603604081101561023557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610459565b005b34801561027957600080fd5b506102a66004803603602081101561029057600080fd5b81019080803590602001909291905050506105d3565b005b6001818154811015156102b757fe5b906000526020600020016000915090505481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b600080600102821415610332576000905061039b565b600073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141590505b919050565b60006103ab8361031c565b15156103ba5760009050610453565b8173ffffffffffffffffffffffffffffffffffffffff1660008085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561042d5760009050610453565b60008084815260200190815260200160002060000160149054906101000a900460ff1690505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561049557600080fd5b61049e8261031c565b1515156104aa57600080fd5b60008060008481526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018390806001815401808255809150509060018203906000526020600020016000909192909190915055507f6c31dccb879bb85919f9263c08ec4d92c6900d2f2c0193ac9efe02a777ba76d7338484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561064257600080fd5b6000151560008083815260200190815260200160002060000160149054906101000a900460ff16151514151561067757600080fd5b600160008083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507ff356e1d4d68993b720834d1fbf88de67fedbfb9ced9d4a42987356b426ec32503382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15056fea165627a7a7230582021117904bcde8f1520a67ae9dcf9fb3f891d62a888941d8f84d11797f965d11d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x10C1266C EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x4063D812 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x532442D9 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xA7EAA1AC EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xB8230960 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xF260F5CF EQ PUSH2 0x26D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5D3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2B7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 MUL DUP3 EQ ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x39B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB DUP4 PUSH2 0x31C JUMP JUMPDEST ISZERO ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x453 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49E DUP3 PUSH2 0x31C JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP PUSH32 0x6C31DCCB879BB85919F9263C08EC4D92C6900D2F2C0193AC9EFE02A777BA76D7 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF356E1D4D68993B720834D1FBF88DE67FEDBFB9CED9D4A42987356B426EC3250 CALLER DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x21 GT PUSH26 0x4BCDE8F1520A67AE9DCF9FB3F891D62A888941D8F84D11797F9 PUSH6 0xD11D00290000 ",
							"sourceMap": "26:1265:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:1265:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610072576000357c01000000000000000000000000000000000000000000000000000000009004806310c1266c146100775780634063d812146100c6578063532442d91461014c578063a7eaa1ac1461019f578063b823096014610212578063f260f5cf1461026d575b600080fd5b34801561008357600080fd5b506100b06004803603602081101561009a57600080fd5b81019080803590602001909291905050506102a8565b6040518082815260200191505060405180910390f35b3480156100d257600080fd5b506100ff600480360360208110156100e957600080fd5b81019080803590602001909291905050506102cb565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390f35b34801561015857600080fd5b506101856004803603602081101561016f57600080fd5b810190808035906020019092919050505061031c565b604051808215151515815260200191505060405180910390f35b3480156101ab57600080fd5b506101f8600480360360408110156101c257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a0565b604051808215151515815260200191505060405180910390f35b34801561021e57600080fd5b5061026b6004803603604081101561023557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610459565b005b34801561027957600080fd5b506102a66004803603602081101561029057600080fd5b81019080803590602001909291905050506105d3565b005b6001818154811015156102b757fe5b906000526020600020016000915090505481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b600080600102821415610332576000905061039b565b600073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141590505b919050565b60006103ab8361031c565b15156103ba5760009050610453565b8173ffffffffffffffffffffffffffffffffffffffff1660008085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561042d5760009050610453565b60008084815260200190815260200160002060000160149054906101000a900460ff1690505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561049557600080fd5b61049e8261031c565b1515156104aa57600080fd5b60008060008481526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018390806001815401808255809150509060018203906000526020600020016000909192909190915055507f6c31dccb879bb85919f9263c08ec4d92c6900d2f2c0193ac9efe02a777ba76d7338484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561064257600080fd5b6000151560008083815260200190815260200160002060000160149054906101000a900460ff16151514151561067757600080fd5b600160008083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507ff356e1d4d68993b720834d1fbf88de67fedbfb9ced9d4a42987356b426ec32503382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15056fea165627a7a7230582021117904bcde8f1520a67ae9dcf9fb3f891d62a888941d8f84d11797f965d11d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x10C1266C EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x4063D812 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x532442D9 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xA7EAA1AC EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xB8230960 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xF260F5CF EQ PUSH2 0x26D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5D3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2B7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 MUL DUP3 EQ ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x39B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB DUP4 PUSH2 0x31C JUMP JUMPDEST ISZERO ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x453 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49E DUP3 PUSH2 0x31C JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP PUSH32 0x6C31DCCB879BB85919F9263C08EC4D92C6900D2F2C0193AC9EFE02A777BA76D7 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF356E1D4D68993B720834D1FBF88DE67FEDBFB9CED9D4A42987356B426EC3250 CALLER DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x21 GT PUSH26 0x4BCDE8F1520A67AE9DCF9FB3F891D62A888941D8F84D11797F9 PUSH6 0xD11D00290000 ",
							"sourceMap": "26:1265:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:25:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;177:25:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;133:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;133:37:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;133:37:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;340:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;340:163:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;340:163:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1069:219;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1069:219:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1069:219:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;511:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;511:302:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;511:302:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;821:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;821:240:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;821:240:0;;;;;;;;;;;;;;;;;:::i;:::-;;177:25;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;133:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;340:163::-;390:13;427:1;419:9;;:4;:9;416:26;;;437:5;430:12;;;;416:26;493:1;460:35;;:5;:11;466:4;460:11;;;;;;;;;;;:21;;;;;;;;;;;;:35;;;;453:42;;340:163;;;;:::o;1069:219::-;1137:4;1158:12;1165:4;1158:6;:12::i;:::-;1157:13;1154:30;;;1179:5;1172:12;;;;1154:30;1223:4;1198:29;;:5;:11;1204:4;1198:11;;;;;;;;;;;:21;;;;;;;;;;;;:29;;;;1195:46;;;1236:5;1229:12;;;;1195:46;1259:5;:11;1265:4;1259:11;;;;;;;;;;;:21;;;;;;;;;;;;1252:28;;1069:219;;;;;:::o;511:302::-;611:1;590:23;;:9;:23;;;;582:32;;;;;;;;634:12;641:4;634:6;:12::i;:::-;633:13;625:22;;;;;;;;658:14;675:5;:11;681:4;675:11;;;;;;;;;;;658:28;;711:9;697:1;:11;;;:23;;;;;;;;;;;;;;;;;;731:8;745:4;731:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;731:19:0;;;;;;;;;;;;;;;;;;;;;;766:39;777:10;789:4;795:9;766:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:302;;;:::o;821:240::-;907:10;882:35;;:5;:11;888:4;882:11;;;;;;;;;;;:21;;;;;;;;;;;;:35;;;874:44;;;;;;;;962:5;937:30;;:5;:11;943:4;937:11;;;;;;;;;;;:21;;;;;;;;;;;;:30;;;929:39;;;;;;;;1003:4;979:5;:11;985:4;979:11;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;1023:30;1036:10;1048:4;1023:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:240;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "371000",
								"executionCost": "405",
								"totalCost": "371405"
							},
							"external": {
								"certList(uint256)": "769",
								"certs(bytes32)": "960",
								"confirmCert(bytes32)": "22850",
								"createCert(bytes32,address)": "63166",
								"isCert(bytes32)": "715",
								"isUserCert(bytes32,address)": "1570"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 1291,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "MSTORE"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 1291,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582021117904bcde8f1520a67ae9dcf9fb3f891d62a888941d8f84d11797f965d11d0029",
									".code": [
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "SWAP1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "DIV"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "10C1266C"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "4063D812"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "532442D9"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "A7EAA1AC"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "B8230960"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "F260F5CF"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1291,
											"name": "REVERT"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP3"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP3"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "RETURN"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP3"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP2"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "MLOAD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP4"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "AND"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "AND"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "MSTORE"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP3"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ISZERO"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ISZERO"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ISZERO"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ISZERO"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "MSTORE"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP3"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "MLOAD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP2"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SUB"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "RETURN"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP3"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "DUP3"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "ISZERO"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "ISZERO"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "ISZERO"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "ISZERO"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SUB"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "RETURN"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP2"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP3"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP3"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "MLOAD"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP3"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP2"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "MSTORE"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "MLOAD"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SUB"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "RETURN"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "DUP2"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "ADD"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "ADD"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP3"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP2"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "AND"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "ADD"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP3"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP2"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "STOP"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "DUP2"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "SWAP3"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "STOP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SLOAD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "LT"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "ISZERO"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "ISZERO"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "JUMPI"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "INVALID"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "KECCAK256"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "SLOAD"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 202,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "MSTORE"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "MSTORE"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "KECCAK256"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP2"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SLOAD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "EXP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DIV"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "AND"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SLOAD"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "EXP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DIV"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "AND"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "DUP3"
										},
										{
											"begin": 133,
											"end": 170,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 390,
											"end": 403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 427,
											"end": 428,
											"name": "DUP1"
										},
										{
											"begin": 419,
											"end": 428,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 419,
											"end": 428,
											"name": "MUL"
										},
										{
											"begin": 419,
											"end": 423,
											"name": "DUP3"
										},
										{
											"begin": 419,
											"end": 428,
											"name": "EQ"
										},
										{
											"begin": 416,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 416,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 416,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 437,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 430,
											"end": 442,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 442,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 430,
											"end": 442,
											"name": "JUMP"
										},
										{
											"begin": 416,
											"end": 442,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 416,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 493,
											"end": 494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "AND"
										},
										{
											"begin": 460,
											"end": 465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 470,
											"name": "DUP5"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 460,
											"end": 471,
											"name": "KECCAK256"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "ADD"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "SWAP1"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "SLOAD"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "SWAP1"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "EXP"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "SWAP1"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "DIV"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 460,
											"end": 481,
											"name": "AND"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "AND"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "EQ"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "ISZERO"
										},
										{
											"begin": 453,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 453,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 340,
											"end": 503,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1137,
											"end": 1141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1165,
											"end": 1169,
											"name": "DUP4"
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1158,
											"end": 1170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1158,
											"end": 1170,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1158,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 1157,
											"end": 1170,
											"name": "ISZERO"
										},
										{
											"begin": 1154,
											"end": 1184,
											"name": "ISZERO"
										},
										{
											"begin": 1154,
											"end": 1184,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1154,
											"end": 1184,
											"name": "JUMPI"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1172,
											"end": 1184,
											"name": "JUMP"
										},
										{
											"begin": 1154,
											"end": 1184,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1154,
											"end": 1184,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1204,
											"end": 1208,
											"name": "DUP6"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "KECCAK256"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "EQ"
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "ISZERO"
										},
										{
											"begin": 1195,
											"end": 1241,
											"name": "ISZERO"
										},
										{
											"begin": 1195,
											"end": 1241,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1195,
											"end": 1241,
											"name": "JUMPI"
										},
										{
											"begin": 1236,
											"end": 1241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1241,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1241,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1241,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1229,
											"end": 1241,
											"name": "JUMP"
										},
										{
											"begin": 1195,
											"end": 1241,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1195,
											"end": 1241,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "DUP1"
										},
										{
											"begin": 1265,
											"end": 1269,
											"name": "DUP5"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "DUP2"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "MSTORE"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "ADD"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "DUP2"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "MSTORE"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "ADD"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1270,
											"name": "KECCAK256"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "ADD"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "SLOAD"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "EXP"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "DIV"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "AND"
										},
										{
											"begin": 1252,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 1252,
											"end": 1280,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP3"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "SWAP2"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1288,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 590,
											"end": 613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 613,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 613,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 613,
											"name": "EQ"
										},
										{
											"begin": 590,
											"end": 613,
											"name": "ISZERO"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "JUMPI"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "DUP1"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "REVERT"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "JUMPDEST"
										},
										{
											"begin": 634,
											"end": 646,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 641,
											"end": 645,
											"name": "DUP3"
										},
										{
											"begin": 634,
											"end": 640,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 634,
											"end": 646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 646,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 634,
											"end": 646,
											"name": "JUMPDEST"
										},
										{
											"begin": 633,
											"end": 646,
											"name": "ISZERO"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "ISZERO"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "ISZERO"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "DUP1"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "REVERT"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 625,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 658,
											"end": 672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 675,
											"end": 680,
											"name": "DUP1"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 681,
											"end": 685,
											"name": "DUP5"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "MSTORE"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "SWAP1"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "MSTORE"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 675,
											"end": 686,
											"name": "KECCAK256"
										},
										{
											"begin": 658,
											"end": 686,
											"name": "SWAP1"
										},
										{
											"begin": 658,
											"end": 686,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 697,
											"end": 698,
											"name": "DUP2"
										},
										{
											"begin": 697,
											"end": 708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 708,
											"name": "ADD"
										},
										{
											"begin": 697,
											"end": 708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "EXP"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "SLOAD"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "MUL"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "NOT"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "AND"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "DUP4"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "AND"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "MUL"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "OR"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "SSTORE"
										},
										{
											"begin": 697,
											"end": 720,
											"name": "POP"
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 745,
											"end": 749,
											"name": "DUP4"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "DUP3"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SUB"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "MSTORE"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "KECCAK256"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP3"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "SSTORE"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "6C31DCCB879BB85919F9263C08EC4D92C6900D2F2C0193AC9EFE02A777BA76D7"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER"
										},
										{
											"begin": 789,
											"end": 793,
											"name": "DUP5"
										},
										{
											"begin": 795,
											"end": 804,
											"name": "DUP5"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "MLOAD"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP5"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "AND"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "AND"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP2"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "MSTORE"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "ADD"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP4"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP2"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "MSTORE"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "ADD"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP3"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "AND"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "AND"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP2"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "MSTORE"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "ADD"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "SWAP4"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "MLOAD"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "SWAP2"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "SUB"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 805,
											"name": "LOG1"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 813,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "JUMPDEST"
										},
										{
											"begin": 907,
											"end": 917,
											"name": "CALLER"
										},
										{
											"begin": 882,
											"end": 917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 917,
											"name": "AND"
										},
										{
											"begin": 882,
											"end": 887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 888,
											"end": 892,
											"name": "DUP4"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "SWAP1"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 882,
											"end": 893,
											"name": "KECCAK256"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "SLOAD"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "EXP"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "DIV"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 903,
											"name": "AND"
										},
										{
											"begin": 882,
											"end": 917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 917,
											"name": "AND"
										},
										{
											"begin": 882,
											"end": 917,
											"name": "EQ"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "ISZERO"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "ISZERO"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "JUMPI"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "DUP1"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "REVERT"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 874,
											"end": 918,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 967,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 967,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 967,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP1"
										},
										{
											"begin": 943,
											"end": 947,
											"name": "DUP4"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 948,
											"name": "KECCAK256"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "SLOAD"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "EXP"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "DIV"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 937,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 937,
											"end": 967,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 967,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 967,
											"name": "EQ"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "ISZERO"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "ISZERO"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "JUMPI"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "REVERT"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 929,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1007,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "DUP1"
										},
										{
											"begin": 985,
											"end": 989,
											"name": "DUP4"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "DUP2"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "MSTORE"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "DUP2"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "MSTORE"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 979,
											"end": 990,
											"name": "KECCAK256"
										},
										{
											"begin": 979,
											"end": 1000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1000,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 1000,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "EXP"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "DUP2"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "SLOAD"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "DUP2"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "MUL"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "NOT"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "AND"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "DUP4"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "ISZERO"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "ISZERO"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "MUL"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "OR"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "SSTORE"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "POP"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH",
											"value": "F356E1D4D68993B720834D1FBF88DE67FEDBFB9CED9D4A42987356B426EC3250"
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "CALLER"
										},
										{
											"begin": 1048,
											"end": 1052,
											"name": "DUP3"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "MLOAD"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "DUP1"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "DUP4"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "AND"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "AND"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "MSTORE"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "ADD"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "DUP3"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "MSTORE"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "ADD"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "SWAP3"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "POP"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "POP"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "POP"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "MLOAD"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "DUP1"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "SWAP2"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "SUB"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "SWAP1"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "LOG1"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 1061,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"certList(uint256)": "10c1266c",
							"certs(bytes32)": "4063d812",
							"confirmCert(bytes32)": "f260f5cf",
							"createCert(bytes32,address)": "b8230960",
							"isCert(bytes32)": "532442d9",
							"isUserCert(bytes32,address)": "a7eaa1ac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"certs\",\"outputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"confirmed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cert\",\"type\":\"bytes32\"}],\"name\":\"isCert\",\"outputs\":[{\"name\":\"isIndeed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cert\",\"type\":\"bytes32\"},{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserCert\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cert\",\"type\":\"bytes32\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"createCert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cert\",\"type\":\"bytes32\"}],\"name\":\"confirmCert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cert\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"LogNewCert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cert\",\"type\":\"bytes32\"}],\"name\":\"LogConfirmed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Content.sol\":\"Content\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Content.sol\":{\"keccak256\":\"0x25872163670aa5b9f73a36d2ec2cada25427ef452f35fa9d815ef7e8a05c40e4\",\"urls\":[\"bzzr://82502b664f76149dceef4346eb44f98d08422361df40de92c7358f79d330d700\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Content.sol": {
				"ast": {
					"absolutePath": "contracts/Content.sol",
					"exportedSymbols": {
						"Content": [
							168
						]
					},
					"id": 169,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "Content",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Content.Cert",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "75:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "75:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "confirmed",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "103:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "103:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Cert",
									"nodeType": "StructDefinition",
									"scope": 168,
									"src": "52:73:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"name": "certs",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "133:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
										"typeString": "mapping(bytes32 => struct Content.Cert)"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 7,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "141:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "133:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
											"typeString": "mapping(bytes32 => struct Content.Cert)"
										},
										"valueType": {
											"contractScope": null,
											"id": 8,
											"name": "Cert",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "152:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Cert_$6_storage_ptr",
												"typeString": "struct Content.Cert"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "certList",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "177:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
										"typeString": "bytes32[]"
									},
									"typeName": {
										"baseType": {
											"id": 11,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "177:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"id": 12,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "177:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
											"typeString": "bytes32[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 21,
									"name": "LogNewCert",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "228:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"name": "cert",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "244:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "258:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "227:49:0"
									},
									"src": "211:66:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 27,
									"name": "LogConfirmed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "302:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": false,
												"name": "cert",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "318:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 24,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "301:30:0"
									},
									"src": "283:49:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "405:98:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 34,
														"name": "cert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "419:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "427:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "419:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 39,
												"nodeType": "IfStatement",
												"src": "416:26:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "437:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 33,
													"id": 38,
													"nodeType": "Return",
													"src": "430:12:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "certs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "460:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
																	"typeString": "mapping(bytes32 => struct Content.Cert storage ref)"
																}
															},
															"id": 42,
															"indexExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "cert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "466:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "460:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Cert_$6_storage",
																"typeString": "struct Content.Cert storage ref"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "recipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "460:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "493:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "485:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "460:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 33,
												"id": 48,
												"nodeType": "Return",
												"src": "453:42:0"
											}
										]
									},
									"documentation": null,
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "cert",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "356:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 28,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "355:14:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "isIndeed",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "390:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "389:15:0"
									},
									"scope": 168,
									"src": "340:163:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "571:242:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "590:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "611:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "603:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "603:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "590:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															187
														],
														"referencedDeclaration": 186,
														"src": "582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "582:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "582:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "633:13:0",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 67,
																		"name": "cert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "641:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 66,
																	"name": "isCert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "634:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (bytes32) view returns (bool)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "634:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 65,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															187
														],
														"referencedDeclaration": 186,
														"src": "625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "625:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "625:22:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "658:14:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Cert_$6_storage_ptr",
															"typeString": "struct Content.Cert"
														},
														"typeName": {
															"contractScope": null,
															"id": 72,
															"name": "Cert",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 6,
															"src": "658:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Cert_$6_storage_ptr",
																"typeString": "struct Content.Cert"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 77,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 74,
														"name": "certs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "675:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
															"typeString": "mapping(bytes32 => struct Content.Cert storage ref)"
														}
													},
													"id": 76,
													"indexExpression": {
														"argumentTypes": null,
														"id": 75,
														"name": "cert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "681:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "675:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Cert_$6_storage",
														"typeString": "struct Content.Cert storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "658:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 78,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "697:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Cert_$6_storage_ptr",
																"typeString": "struct Content.Cert storage pointer"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "recipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "697:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 81,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "711:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "697:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "697:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 87,
															"name": "cert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 84,
															"name": "certList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "731:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																"typeString": "bytes32[] storage ref"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "731:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (bytes32) returns (uint256)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "731:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "731:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 91,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "777:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "777:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 93,
															"name": "cert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "789:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 94,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "795:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "LogNewCert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "766:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "766:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "EmitStatement",
												"src": "761:44:0"
											}
										]
									},
									"documentation": null,
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createCert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "cert",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "531:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 51,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "545:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "530:33:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:0:0"
									},
									"scope": 168,
									"src": "511:302:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "863:198:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 104,
																		"name": "certs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "882:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
																			"typeString": "mapping(bytes32 => struct Content.Cert storage ref)"
																		}
																	},
																	"id": 106,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 105,
																		"name": "cert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "888:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "882:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Cert_$6_storage",
																		"typeString": "struct Content.Cert storage ref"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "recipient",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "882:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "907:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "907:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "882:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															187
														],
														"referencedDeclaration": 186,
														"src": "874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "874:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "874:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 114,
																		"name": "certs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "937:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
																			"typeString": "mapping(bytes32 => struct Content.Cert storage ref)"
																		}
																	},
																	"id": 116,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 115,
																		"name": "cert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "943:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "937:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Cert_$6_storage",
																		"typeString": "struct Content.Cert storage ref"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "confirmed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "937:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "962:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "937:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															187
														],
														"referencedDeclaration": 186,
														"src": "929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "929:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 122,
																"name": "certs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "979:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
																	"typeString": "mapping(bytes32 => struct Content.Cert storage ref)"
																}
															},
															"id": 124,
															"indexExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "cert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "979:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Cert_$6_storage",
																"typeString": "struct Content.Cert storage ref"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "confirmed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "979:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1003:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "979:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "979:28:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 130,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1036:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1036:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 132,
															"name": "cert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1048:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 129,
														"name": "LogConfirmed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1023:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (address,bytes32)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "EmitStatement",
												"src": "1018:35:0"
											}
										]
									},
									"documentation": null,
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "confirmCert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "cert",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "842:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 99,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "841:14:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "863:0:0"
									},
									"scope": 168,
									"src": "821:240:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "1143:145:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1157:13:0",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 146,
																"name": "cert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "1165:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 145,
															"name": "isCert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "1158:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (bytes32) view returns (bool)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1158:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 151,
												"nodeType": "IfStatement",
												"src": "1154:30:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1179:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 144,
													"id": 150,
													"nodeType": "Return",
													"src": "1172:12:0"
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 152,
																"name": "certs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1198:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
																	"typeString": "mapping(bytes32 => struct Content.Cert storage ref)"
																}
															},
															"id": 154,
															"indexExpression": {
																"argumentTypes": null,
																"id": 153,
																"name": "cert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "1204:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1198:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Cert_$6_storage",
																"typeString": "struct Content.Cert storage ref"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "recipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1198:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1223:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1198:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 160,
												"nodeType": "IfStatement",
												"src": "1195:46:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1236:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 144,
													"id": 159,
													"nodeType": "Return",
													"src": "1229:12:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 161,
															"name": "certs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1259:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Cert_$6_storage_$",
																"typeString": "mapping(bytes32 => struct Content.Cert storage ref)"
															}
														},
														"id": 163,
														"indexExpression": {
															"argumentTypes": null,
															"id": 162,
															"name": "cert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1265:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1259:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Cert_$6_storage",
															"typeString": "struct Content.Cert storage ref"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "confirmed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "1259:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 144,
												"id": 165,
												"nodeType": "Return",
												"src": "1252:28:0"
											}
										]
									},
									"documentation": null,
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserCert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"name": "cert",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1089:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1103:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1088:28:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1137:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1137:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1136:6:0"
									},
									"scope": 168,
									"src": "1069:219:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 169,
							"src": "26:1265:0"
						}
					],
					"src": "0:1291:0"
				},
				"id": 0
			}
		}
	}
}